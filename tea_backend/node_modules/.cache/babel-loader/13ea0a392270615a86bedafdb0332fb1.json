{"remainingRequest":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\thread-loader\\dist\\cjs.js!D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\babel-loader\\lib\\index.js!D:\\尚硅谷\\uniapp_storage\\tea_backend\\src\\api\\validate.js","dependencies":[{"path":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\src\\api\\validate.js","mtime":1668473831706},{"path":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667713506232},{"path":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1667713504236},{"path":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667713515975}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.array.index-of\";\nexport function isValidUsername(str) {\n  return ['admin', 'editor'].indexOf(str.trim()) >= 0;\n}\nexport function isExternal(path) {\n  return /^(https?:|mailto:|tel:)/.test(path);\n}\nexport function isCellPhone(val) {\n  if (!/^1(3|4|5|6|7|8)\\d{9}$/.test(val)) {\n    return false;\n  } else {\n    return true;\n  }\n} //校验账号\n\nexport function checkUserName(rule, value, callback) {\n  if (value == \"\") {\n    callback(new Error(\"请输入账号\"));\n  } else if (value.length > 20 || value.length < 3) {\n    callback(new Error(\"账号长度应是3-20\"));\n  } else {\n    callback();\n  }\n} //校验姓名\n\nexport function checkName(rule, value, callback) {\n  if (value == \"\") {\n    callback(new Error(\"请输入姓名\"));\n  } else if (value.length > 12) {\n    callback(new Error(\"账号长度应是1-12\"));\n  } else {\n    callback();\n  }\n}\nexport function checkPhone(rule, value, callback) {\n  // let phoneReg = /(^1[3|4|5|6|7|8|9]\\d{9}$)|(^09\\d{8}$)/;\n  if (value == \"\") {\n    callback(new Error(\"请输入手机号\"));\n  } else if (!isCellPhone(value)) {\n    //引入methods中封装的检查手机格式的方法\n    callback(new Error(\"请输入正确的手机号!\"));\n  } else {\n    callback();\n  }\n}\nexport function validID(rule, value, callback) {\n  // 身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X\n  var reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n\n  if (value == '') {\n    callback(new Error('请输入身份证号码'));\n  } else if (reg.test(value)) {\n    callback();\n  } else {\n    callback(new Error('身份证号码不正确'));\n  }\n}",{"version":3,"sources":["D:\\尚硅谷\\uniapp_storage\\tea_backend\\src\\api\\validate.js"],"names":["isValidUsername","str","indexOf","trim","isExternal","path","test","isCellPhone","val","checkUserName","rule","value","callback","Error","length","checkName","checkPhone","validID","reg"],"mappings":";;AACA,OAAO,SAASA,eAAT,CAA0BC,GAA1B,EAA+B;AACpC,SAAO,CAAC,OAAD,EAAU,QAAV,EAAoBC,OAApB,CAA4BD,GAAG,CAACE,IAAJ,EAA5B,KAA2C,CAAlD;AACD;AAED,OAAO,SAASC,UAAT,CAAqBC,IAArB,EAA2B;AAChC,SAAO,0BAA0BC,IAA1B,CAA+BD,IAA/B,CAAP;AACD;AAED,OAAO,SAASE,WAAT,CAAsBC,GAAtB,EAA2B;AAChC,MAAI,CAAC,wBAAwBF,IAAxB,CAA6BE,GAA7B,CAAL,EAAwC;AACtC,WAAO,KAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF,C,CAED;;AACA,OAAO,SAASC,aAAT,CAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,QAArC,EAA8C;AACnD,MAAID,KAAK,IAAI,EAAb,EAAiB;AACfC,IAAAA,QAAQ,CAAC,IAAIC,KAAJ,CAAU,OAAV,CAAD,CAAR;AACD,GAFD,MAEO,IAAIF,KAAK,CAACG,MAAN,GAAe,EAAf,IAAqBH,KAAK,CAACG,MAAN,GAAc,CAAvC,EAA0C;AAC/CF,IAAAA,QAAQ,CAAC,IAAIC,KAAJ,CAAU,YAAV,CAAD,CAAR;AACD,GAFM,MAEA;AACLD,IAAAA,QAAQ;AACT;AACF,C,CAED;;AACA,OAAO,SAASG,SAAT,CAAoBL,IAApB,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA0C;AAC/C,MAAID,KAAK,IAAI,EAAb,EAAiB;AACfC,IAAAA,QAAQ,CAAC,IAAIC,KAAJ,CAAU,OAAV,CAAD,CAAR;AACD,GAFD,MAEO,IAAIF,KAAK,CAACG,MAAN,GAAe,EAAnB,EAAuB;AAC5BF,IAAAA,QAAQ,CAAC,IAAIC,KAAJ,CAAU,YAAV,CAAD,CAAR;AACD,GAFM,MAEA;AACLD,IAAAA,QAAQ;AACT;AACF;AAED,OAAO,SAASI,UAAT,CAAqBN,IAArB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA2C;AAChD;AACA,MAAID,KAAK,IAAI,EAAb,EAAiB;AACfC,IAAAA,QAAQ,CAAC,IAAIC,KAAJ,CAAU,QAAV,CAAD,CAAR;AACD,GAFD,MAEO,IAAI,CAACN,WAAW,CAACI,KAAD,CAAhB,EAAyB;AAAC;AAC/BC,IAAAA,QAAQ,CAAC,IAAIC,KAAJ,CAAU,YAAV,CAAD,CAAR;AACD,GAFM,MAEA;AACLD,IAAAA,QAAQ;AACT;AACF;AAGD,OAAO,SAASK,OAAT,CAAkBP,IAAlB,EAAuBC,KAAvB,EAA6BC,QAA7B,EAAuC;AAC5C;AACA,MAAIM,GAAG,GAAG,0CAAV;;AACA,MAAGP,KAAK,IAAI,EAAZ,EAAgB;AACdC,IAAAA,QAAQ,CAAC,IAAIC,KAAJ,CAAU,UAAV,CAAD,CAAR;AACD,GAFD,MAEO,IAAIK,GAAG,CAACZ,IAAJ,CAASK,KAAT,CAAJ,EAAqB;AAC1BC,IAAAA,QAAQ;AACT,GAFM,MAEA;AACLA,IAAAA,QAAQ,CAAC,IAAIC,KAAJ,CAAU,UAAV,CAAD,CAAR;AACD;AACF","sourcesContent":["\r\nexport function isValidUsername (str) {\r\n  return ['admin', 'editor'].indexOf(str.trim()) >= 0;\r\n}\r\n\r\nexport function isExternal (path) {\r\n  return /^(https?:|mailto:|tel:)/.test(path);\r\n}\r\n\r\nexport function isCellPhone (val) {\r\n  if (!/^1(3|4|5|6|7|8)\\d{9}$/.test(val)) {\r\n    return false\r\n  } else {\r\n    return true\r\n  }\r\n}\r\n\r\n//校验账号\r\nexport function checkUserName (rule, value, callback){\r\n  if (value == \"\") {\r\n    callback(new Error(\"请输入账号\"))\r\n  } else if (value.length > 20 || value.length <3) {\r\n    callback(new Error(\"账号长度应是3-20\"))\r\n  } else {\r\n    callback()\r\n  }\r\n}\r\n\r\n//校验姓名\r\nexport function checkName (rule, value, callback){\r\n  if (value == \"\") {\r\n    callback(new Error(\"请输入姓名\"))\r\n  } else if (value.length > 12) {\r\n    callback(new Error(\"账号长度应是1-12\"))\r\n  } else {\r\n    callback()\r\n  }\r\n}\r\n\r\nexport function checkPhone (rule, value, callback){\r\n  // let phoneReg = /(^1[3|4|5|6|7|8|9]\\d{9}$)|(^09\\d{8}$)/;\r\n  if (value == \"\") {\r\n    callback(new Error(\"请输入手机号\"))\r\n  } else if (!isCellPhone(value)) {//引入methods中封装的检查手机格式的方法\r\n    callback(new Error(\"请输入正确的手机号!\"))\r\n  } else {\r\n    callback()\r\n  }\r\n}\r\n\r\n\r\nexport function validID (rule,value,callback) {\r\n  // 身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X\r\n  let reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/\r\n  if(value == '') {\r\n    callback(new Error('请输入身份证号码'))\r\n  } else if (reg.test(value)) {\r\n    callback()\r\n  } else {\r\n    callback(new Error('身份证号码不正确'))\r\n  }\r\n}"]}]}