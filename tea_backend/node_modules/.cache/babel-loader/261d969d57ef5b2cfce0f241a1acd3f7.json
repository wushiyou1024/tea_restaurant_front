{"remainingRequest":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\babel-loader\\lib\\index.js!D:\\尚硅谷\\uniapp_storage\\tea_backend\\src\\utils\\request.js","dependencies":[{"path":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\src\\utils\\request.js","mtime":1670921128766},{"path":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667713506232},{"path":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667713515975}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { Message } from 'element-ui';\nimport Cookies from 'js-cookie'; //创建axios实例\n\nvar service = axios.create({\n  baseURL: 'base-api',\n  timeout: 15000\n}); //请求拦截器\n\nservice.interceptors.request.use(function (config) {\n  config.headers['Authorization'] = 'Bearer ' + Cookies.get('access_token');\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); //响应拦截器\n\nservice.interceptors.response.use(function (response) {\n  var res = response.data;\n\n  if (!res.success) {\n    Message.error(res.msg || '请求错误！');\n    return Promise.reject(new Error(res.msg || '请求错误！'));\n  }\n\n  return res.result;\n}, function (error) {\n  Message.error(error.response.msg || error.response.status); //这里还可以根据status值(401、500等)分别做对应的处理，比如记录当前请求url，登录以后自动跳转到原url\n\n  return Promise.reject(error);\n}); //将实例暴露出去使用\n\nexport default service;",{"version":3,"sources":["D:\\尚硅谷\\uniapp_storage\\tea_backend\\src\\utils\\request.js"],"names":["axios","Message","Cookies","service","create","baseURL","timeout","interceptors","request","use","config","headers","get","error","Promise","reject","response","res","data","success","msg","Error","result","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,OAAV,QAAyB,YAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;AACA,IAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAG,UADe;AAEzBC,EAAAA,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAIA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACI,UAAAC,MAAM,EAAE;AACJA,EAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkC,YAAYT,OAAO,CAACU,GAAR,CAAa,cAAb,CAA9C;AACA,SAAOF,MAAP;AACH,CAJL,EAIO,UAAAG,KAAK,EAAE;AACN,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CANL,E,CAQA;;AACAV,OAAO,CAACI,YAAR,CAAqBS,QAArB,CAA8BP,GAA9B,CACI,UAAAO,QAAQ,EAAE;AACN,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;;AACA,MAAI,CAACD,GAAG,CAACE,OAAT,EAAkB;AACdlB,IAAAA,OAAO,CAACY,KAAR,CAAcI,GAAG,CAACG,GAAJ,IAAW,OAAzB;AACA,WAAON,OAAO,CAACC,MAAR,CAAe,IAAIM,KAAJ,CAAUJ,GAAG,CAACG,GAAJ,IAAW,OAArB,CAAf,CAAP;AACH;;AACD,SAAOH,GAAG,CAACK,MAAX;AACH,CARL,EASI,UAAAT,KAAK,EAAE;AACHZ,EAAAA,OAAO,CAACY,KAAR,CAAeA,KAAK,CAACG,QAAN,CAAeI,GAAf,IAAsBP,KAAK,CAACG,QAAN,CAAeO,MAApD,EADG,CAEH;;AACA,SAAOT,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAbL,E,CAeA;;AACA,eAAeV,OAAf","sourcesContent":["import axios from 'axios'\nimport {  Message } from 'element-ui'\nimport Cookies from 'js-cookie'\n\n//创建axios实例\nconst service = axios.create({\n    baseURL:  'base-api',\n    timeout: 15000\n})\n//请求拦截器\nservice.interceptors.request.use(\n    config=>{\n        config.headers['Authorization'] = 'Bearer ' + Cookies.get( 'access_token')\n        return config\n    }, error=>{\n        return Promise.reject(error)\n    }\n)\n//响应拦截器\nservice.interceptors.response.use(\n    response=>{\n        const res = response.data\n        if (!res.success) {\n            Message.error(res.msg || '请求错误！')\n            return Promise.reject(new Error(res.msg || '请求错误！'))\n        }\n        return res.result\n    },\n    error=>{\n        Message.error( error.response.msg || error.response.status)\n        //这里还可以根据status值(401、500等)分别做对应的处理，比如记录当前请求url，登录以后自动跳转到原url\n        return Promise.reject(error)\n    }\n)\n//将实例暴露出去使用\nexport default service"]}]}